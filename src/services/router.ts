import { ME_CHAT_ID } from "../bot/init.ts";
import { BigKeyboard, inlineDates } from "../bot/keyboards.ts";
import { appointmentsToMessage } from "../utils/formatters.ts";
import { getAppointmentsForUser } from "./storages/AppointmentsStorage.ts";
import { createMessageRouter } from "./MessageRouter.ts";
import { toggleNotificationsForUser } from "./notificationsCron.ts";

export const enum RoutesNames {
	START = "/start",
	LIST_APPOINTMENTS = "üìÜ",
	MAKE_APPOINTMENT = "ü§ù",
	DISABLE_NOTIFICATIONS = "üîî",
	ENABLE_NOTIFICATIONS = "üîï",
}

export const router = createMessageRouter([
	{
		type: "text",
		path: RoutesNames.LIST_APPOINTMENTS,
		handler: async (ctx) => {
			// if (ctx.chat?.id !== ME_CHAT_ID) {
			// 	return;
			// }
			const appointments = await getAppointmentsForUser(ME_CHAT_ID);

			ctx.reply(
				await appointmentsToMessage(
					appointments.map((appointment) => appointment.value),
				),
			);

			return;
		},
	},
	{
		type: "text",
		path: RoutesNames.START,
		handler: async (ctx) => {
			ctx.telegram.sendMessage(
				ctx.chat.id,
				`–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏. –ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´${RoutesNames.MAKE_APPOINTMENT}¬ª –Ω–∏–∂–µ`,
				await BigKeyboard(ctx.chat.id),
			);
		},
	},
	{
		type: "text",
		path: RoutesNames.ENABLE_NOTIFICATIONS,
		handler: async (ctx) => {
			await toggleNotificationsForUser(ctx.chat.id, true);
			await ctx.reply("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã", await BigKeyboard(ctx.chat.id));
		},
	},
	{
		type: "text",
		path: RoutesNames.DISABLE_NOTIFICATIONS,
		handler: async (ctx) => {
			await toggleNotificationsForUser(ctx.chat.id, false);
			await ctx.reply("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã", await BigKeyboard(ctx.chat.id));
		},
	},
	{
		type: "default",
		handler: async (ctx) => {
			const message = await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–±–æ–¥–Ω—É—é –¥–∞—Ç—É –¥–ª—è –∑–∞–ø–∏—Å–∏");
			const keyboard = await inlineDates(message.message_id);

			ctx.telegram.editMessageReplyMarkup(
				ctx.chat!.id,
				message.message_id,
				undefined,
				keyboard,
			);
		},
	},
]);
